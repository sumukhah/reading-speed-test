[{"/Users/sumukhahegde/Code/React/speed-read/src/App.tsx":"1","/Users/sumukhahegde/Code/React/speed-read/src/components/AppHeader/AppHeader.tsx":"2","/Users/sumukhahegde/Code/React/speed-read/src/components/Footer/Footer.tsx":"3","/Users/sumukhahegde/Code/React/speed-read/src/index.tsx":"4","/Users/sumukhahegde/Code/React/speed-read/src/components/AppIntroduction/AppIntroduction.tsx":"5","/Users/sumukhahegde/Code/React/speed-read/src/container/ReadContainer/ReadContainer.tsx":"6","/Users/sumukhahegde/Code/React/speed-read/src/components/TextBox/TextBox.tsx":"7","/Users/sumukhahegde/Code/React/speed-read/src/components/TextFormat/TextFormat.tsx":"8","/Users/sumukhahegde/Code/React/speed-read/src/helpers/index.ts":"9","/Users/sumukhahegde/Code/React/speed-read/src/components/Timer/Timer.tsx":"10","/Users/sumukhahegde/Code/React/speed-read/src/container/StatisticsContainer/StatisticsContainer.tsx":"11","/Users/sumukhahegde/Code/React/speed-read/src/context/wpmContext.tsx":"12","/Users/sumukhahegde/Code/React/speed-read/src/components/ReadMeasurementTable/ReadMeasurementTable.tsx":"13","/Users/sumukhahegde/Code/React/speed-read/src/components/ResultDisplay/ResultDisplay.tsx":"14","/Users/sumukhahegde/Code/React/speed-read/src/components/ComprehensionText/ComprehensionText.tsx":"15","/Users/sumukhahegde/Code/React/speed-read/src/components/VerticalBannerAds/VerticalBannerAds.tsx":"16","/Users/sumukhahegde/Code/React/speed-read/src/components/SquareBannerAd/SquareBannerAd.tsx":"17","/Users/sumukhahegde/Code/React/speed-read/src/components/AdblockDetect/AdblockDetect.tsx":"18","/Users/sumukhahegde/Code/React/speed-read/src/container/GuideContainer/GuideContainer.tsx":"19","/Users/sumukhahegde/Code/React/speed-read/src/components/AppIntroTextBottom/AppIntroTextBottom.tsx":"20"},{"size":2515,"mtime":1609859019381,"results":"21","hashOfConfig":"22"},{"size":607,"mtime":1609853077984,"results":"23","hashOfConfig":"22"},{"size":556,"mtime":1609839365345,"results":"24","hashOfConfig":"22"},{"size":432,"mtime":1609775883821,"results":"25","hashOfConfig":"22"},{"size":942,"mtime":1609852643962,"results":"26","hashOfConfig":"22"},{"size":4189,"mtime":1609048558693,"results":"27","hashOfConfig":"22"},{"size":1764,"mtime":1608722211868,"results":"28","hashOfConfig":"22"},{"size":2441,"mtime":1608726690685,"results":"29","hashOfConfig":"22"},{"size":405,"mtime":1608714314177,"results":"30","hashOfConfig":"22"},{"size":1497,"mtime":1608884404407,"results":"31","hashOfConfig":"22"},{"size":3505,"mtime":1609839302000,"results":"32","hashOfConfig":"22"},{"size":328,"mtime":1608733300851,"results":"33","hashOfConfig":"22"},{"size":1186,"mtime":1608877165322,"results":"34","hashOfConfig":"22"},{"size":1366,"mtime":1608885293452,"results":"35","hashOfConfig":"22"},{"size":630,"mtime":1609855179807,"results":"36","hashOfConfig":"22"},{"size":567,"mtime":1609096938049,"results":"37","hashOfConfig":"22"},{"size":509,"mtime":1609095790667,"results":"38","hashOfConfig":"22"},{"size":1927,"mtime":1608988316593,"results":"39","hashOfConfig":"22"},{"size":4220,"mtime":1609861633615,"results":"40","hashOfConfig":"22"},{"size":613,"mtime":1609859003926,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"hyn9uu",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"44"},"/Users/sumukhahegde/Code/React/speed-read/src/App.tsx",[],["88","89"],"/Users/sumukhahegde/Code/React/speed-read/src/components/AppHeader/AppHeader.tsx",[],"/Users/sumukhahegde/Code/React/speed-read/src/components/Footer/Footer.tsx",[],"/Users/sumukhahegde/Code/React/speed-read/src/index.tsx",[],"/Users/sumukhahegde/Code/React/speed-read/src/components/AppIntroduction/AppIntroduction.tsx",["90"],"import React from \"react\";\nimport { Typography } from \"antd\";\nimport \"./AppIntroduction.scss\";\n\nexport default function AppIntroduction() {\n  return (\n    <div className=\"app-intro-container\">\n      <h1>Pick up a topic and check your Reading Speed for free.</h1>\n      <p className=\"intro-p\">\n        Speed reading is the process of rapidly absorbing the meaning of a\n        context rather than identifying individual words. Speed Reading became\n        so important to gain knowledge in the current scenario. The average\n        reading speed of most adults is around 200 to 250 words per minute. If\n        You cross this range you will have an advantage over others to get\n        knowledge with less time. We provide a free tool to test your reading\n        speed online. Pick a topic or paste a text you want to read. You can\n        choose any fonts with font size, and you can read in a full-screen mode.\n      </p>\n    </div>\n  );\n}\n","/Users/sumukhahegde/Code/React/speed-read/src/container/ReadContainer/ReadContainer.tsx",[],"/Users/sumukhahegde/Code/React/speed-read/src/components/TextBox/TextBox.tsx",[],"/Users/sumukhahegde/Code/React/speed-read/src/components/TextFormat/TextFormat.tsx",[],"/Users/sumukhahegde/Code/React/speed-read/src/helpers/index.ts",[],"/Users/sumukhahegde/Code/React/speed-read/src/components/Timer/Timer.tsx",["91","92"],"import React, { useState, useEffect } from \"react\";\n\nimport \"./Timer.scss\";\n\ninterface Props {\n  calculateWpm: (arg: number) => void;\n  readingMode: boolean;\n}\n\nexport default function Timer(props: Props) {\n  const [minutes, setMinutes] = useState<string>(\"00\");\n  const [seconds, setSeconds] = useState<string>(\"00\");\n  const [counter, setCounter] = useState(0);\n\n  const timeIncrease = (): void => {\n    const secondCounter = counter % 60;\n    const minuteCounter = Math.floor(counter / 60);\n\n    const computedSecond =\n      String(secondCounter).length === 1 ? `0${secondCounter}` : secondCounter;\n    const computedMinute =\n      String(minuteCounter).length === 1 ? `0${minuteCounter}` : minuteCounter;\n\n    setSeconds(computedSecond as string);\n    setMinutes(computedMinute as string);\n    setCounter((counter) => counter + 1);\n  };\n\n  useEffect(() => {\n    if (!props.readingMode && counter > 1) {\n      // there is a small lag of 1 second at start.\n      // to make it correct, pass +1 second to the context.\n      props.calculateWpm(counter + 1);\n      setCounter(0);\n    }\n  }, [props.readingMode, counter]);\n\n  useEffect(() => {\n    const interval = props.readingMode ? setTimeout(timeIncrease, 1000) : null;\n    return () => {\n      !!interval && clearInterval(interval);\n    };\n  }, [counter, props.readingMode]);\n\n  if (counter === 0) {\n    return null;\n  }\n\n  return (\n    <div className=\"timer-container\">\n      <span>\n        {minutes}:{seconds}\n      </span>\n    </div>\n  );\n}\n","/Users/sumukhahegde/Code/React/speed-read/src/container/StatisticsContainer/StatisticsContainer.tsx",["93"],"import React, { useContext } from \"react\";\nimport Helmet from \"react-helmet\";\nimport \"./StatisticsContainer.scss\";\nimport ReadMeasurementTable from \"../../components/ReadMeasurementTable/ReadMeasurementTable\";\nimport ResultDisplay from \"../../components/ResultDisplay/ResultDisplay\";\nimport wpmContext from \"../../context/wpmContext\";\nimport ComprehensionText from \"../../components/ComprehensionText/ComprehensionText\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Button, Card } from \"antd\";\n\nconst switchImage = (wpm: number) => {\n  switch (true) {\n    case wpm <= 120:\n      return { character: \"sloth\", betterThan: 0 };\n    case wpm > 120 && wpm < 250:\n      return { character: \"fox\", betterThan: 20 };\n    case wpm > 250 && wpm < 500:\n      return { character: \"lion\", betterThan: 50 };\n    case wpm > 500:\n      return { character: \"cheetah\", betterThan: 80 };\n    default:\n      return { character: \"fox\", betterThan: 20 };\n  }\n};\n\nexport default function StatisticsContainer() {\n  const { wpm } = useContext(wpmContext);\n  const { character, betterThan } = switchImage(wpm);\n  const history = useHistory();\n\n  const onPressChallengeAgain = () => {\n    history.replace(\"/\");\n  };\n  return (\n    <div className=\"statistics-container\">\n      <Helmet>\n        <title>Speed reading statistics</title>\n        <meta\n          name=\"description\"\n          content=\"Free speed reading online test.Check your reading speed and test your\n          Comprehension.Check your average reading speed. learn to speed read\n          .The average wpm is 150 to 200 wpm.reading wpm test.words per minute\n          reading test.reading wpm test.Check your average reading speed.train\n          yourself with speed reading exercises\"\n        />\n      </Helmet>\n      <div>\n        {wpm > 10 && (\n          <ResultDisplay\n            character={character}\n            wpm={wpm}\n            betterThan={betterThan}\n            readAgain={onPressChallengeAgain}\n          />\n        )}\n      </div>\n      <ComprehensionText />\n      <h2>\n        The following table shows how reading speed and Comprehensions are\n        related\n      </h2>\n      <ReadMeasurementTable />\n      <div className=\"benefits-container\">\n        <h2>Benefits of speed reading</h2>\n        <Card>\n          <b>Read more in less time: </b>\n          <span>\n            By learning to speed read, you can double or triple the amount that\n            you read in the same amount of time. You may find that you only need\n            to skim material to understand what is being discussed. So that you\n            can spend less time to gain knowledge.\n          </span>\n        </Card>\n        <Card>\n          <b>Better Concentration: </b>\n          <span>\n            Speed reading improves your ability to focus your attention on\n            completing a text before moving to achieve other tasks. Your mind\n            stops wandering while reading faster, And the attention and focus\n            will be on the book you are reading.\n          </span>\n        </Card>\n        <Card>\n          <b>Improves Comprehension: </b>\n          <span>\n            Speed reading helps you quit sub-vocalization and focus on the text\n            you are reading, And your ability to remember the contents will\n            gradually increase.\n          </span>\n        </Card>\n        <h4>\n          Check how to improve your reading speed in the&nbsp;\n          <Link to=\"/guide\">Guide</Link>\n        </h4>\n      </div>\n    </div>\n  );\n}\n","/Users/sumukhahegde/Code/React/speed-read/src/context/wpmContext.tsx",[],"/Users/sumukhahegde/Code/React/speed-read/src/components/ReadMeasurementTable/ReadMeasurementTable.tsx",["94"],"import React from \"react\";\nimport { Table, Tag } from \"antd\";\n\nexport default function ReadMeasurementTable() {\n  const columns = [\n    {\n      title: \"Screen\",\n      dataIndex: \"screen\",\n    },\n    {\n      title: \"Paper\",\n      dataIndex: \"paper\",\n    },\n    {\n      title: \"Character\",\n      dataIndex: \"character\",\n    },\n    {\n      title: \"Profile\",\n      dataIndex: \"profile\",\n    },\n  ];\n  const data = [\n    {\n      key: \"1\",\n      paper: 120,\n      screen: 100,\n      character: \"The Sloth\",\n      profile: \"Slow reader\",\n    },\n    {\n      key: \"2\",\n      paper: 250,\n      screen: 200,\n      character: \"The Fox\",\n      profile: \"Average reader\",\n    },\n    {\n      key: \"3\",\n      paper: 500,\n      screen: 400,\n      character: \"The Lion\",\n      profile: \"Speed reader\",\n    },\n    {\n      key: \"4\",\n      paper: 700,\n      screen: 600,\n      character: \"The Cheetah\",\n      profile: \"The Expert\",\n    },\n  ];\n\n  return (\n    <div>\n      <Table\n        // rowSelection={{\n        //   type: selectionType,\n        //   ...rowSelection,\n        // }}\n        pagination={false}\n        columns={columns}\n        dataSource={data}\n        bordered\n      />\n    </div>\n  );\n}\n","/Users/sumukhahegde/Code/React/speed-read/src/components/ResultDisplay/ResultDisplay.tsx",[],"/Users/sumukhahegde/Code/React/speed-read/src/components/ComprehensionText/ComprehensionText.tsx",[],"/Users/sumukhahegde/Code/React/speed-read/src/components/VerticalBannerAds/VerticalBannerAds.tsx",[],"/Users/sumukhahegde/Code/React/speed-read/src/components/SquareBannerAd/SquareBannerAd.tsx",[],"/Users/sumukhahegde/Code/React/speed-read/src/components/AdblockDetect/AdblockDetect.tsx",[],"/Users/sumukhahegde/Code/React/speed-read/src/container/GuideContainer/GuideContainer.tsx",[],"/Users/sumukhahegde/Code/React/speed-read/src/components/AppIntroTextBottom/AppIntroTextBottom.tsx",["95"],"import React from \"react\";\nimport { Typography } from \"antd\";\nimport \"./AppIntroTextBottom.scss\";\n\nexport default function AppIntroTextBottom() {\n  return (\n    <div className=\"app-intro-container\">\n      <h2>How to use this?</h2>\n      <p className=\"intro-p\">\n        Click on start after selecting a topic. Read from top to bottom. You can\n        choose any font family which you prefer, and You can also choose any\n        font size. After you read the entire content and click on Stop. We\n        calculate your speed and display how many words you can read in a\n        minutes\n      </p>\n    </div>\n  );\n}\n",{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":2,"column":10,"nodeType":"102","messageId":"103","endLine":2,"endColumn":20},{"ruleId":"104","severity":1,"message":"105","line":36,"column":6,"nodeType":"106","endLine":36,"endColumn":34,"suggestions":"107"},{"ruleId":"104","severity":1,"message":"108","line":43,"column":6,"nodeType":"106","endLine":43,"endColumn":34,"suggestions":"109"},{"ruleId":"100","severity":1,"message":"110","line":9,"column":10,"nodeType":"102","messageId":"103","endLine":9,"endColumn":16},{"ruleId":"100","severity":1,"message":"111","line":2,"column":17,"nodeType":"102","messageId":"103","endLine":2,"endColumn":20},{"ruleId":"100","severity":1,"message":"101","line":2,"column":10,"nodeType":"102","messageId":"103","endLine":2,"endColumn":20},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"@typescript-eslint/no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["114"],"React Hook useEffect has a missing dependency: 'timeIncrease'. Either include it or remove the dependency array.",["115"],"'Button' is defined but never used.","'Tag' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},"Update the dependencies array to be: [props.readingMode, counter, props]",{"range":"120","text":"121"},"Update the dependencies array to be: [counter, props.readingMode, timeIncrease]",{"range":"122","text":"123"},[1090,1118],"[props.readingMode, counter, props]",[1298,1326],"[counter, props.readingMode, timeIncrease]"]