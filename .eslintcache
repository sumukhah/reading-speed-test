[{"/Users/sumukhahegde/Code/React/speed-read/src/App.tsx":"1","/Users/sumukhahegde/Code/React/speed-read/src/components/AppHeader/AppHeader.tsx":"2","/Users/sumukhahegde/Code/React/speed-read/src/components/Footer/Footer.tsx":"3","/Users/sumukhahegde/Code/React/speed-read/src/index.tsx":"4","/Users/sumukhahegde/Code/React/speed-read/src/reportWebVitals.ts":"5","/Users/sumukhahegde/Code/React/speed-read/src/components/AppIntroduction/AppIntroduction.tsx":"6","/Users/sumukhahegde/Code/React/speed-read/src/container/ReadContainer/ReadContainer.tsx":"7","/Users/sumukhahegde/Code/React/speed-read/src/components/TextBox/TextBox.tsx":"8","/Users/sumukhahegde/Code/React/speed-read/src/components/TextFormat/TextFormat.tsx":"9"},{"size":759,"mtime":1608134862552,"results":"10","hashOfConfig":"11"},{"size":535,"mtime":1608049040345,"results":"12","hashOfConfig":"11"},{"size":233,"mtime":1607691597992,"results":"13","hashOfConfig":"11"},{"size":500,"mtime":1607613585888,"results":"14","hashOfConfig":"11"},{"size":425,"mtime":1607613585889,"results":"15","hashOfConfig":"11"},{"size":638,"mtime":1608120281167,"results":"16","hashOfConfig":"11"},{"size":1578,"mtime":1608639298082,"results":"17","hashOfConfig":"11"},{"size":1139,"mtime":1608574011798,"results":"18","hashOfConfig":"11"},{"size":2126,"mtime":1608533313829,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},"hyn9uu",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"23"},"/Users/sumukhahegde/Code/React/speed-read/src/App.tsx",["41","42"],"import React from \"react\";\nimport { Layout } from \"antd\";\nimport \"./App.scss\";\nimport \"antd/dist/antd.css\";\nimport { Row, Col, Divider } from \"antd\";\n\nimport AppHeader from \"./components/AppHeader/AppHeader\";\nimport Footer from \"./components/Footer/Footer\";\nimport AppIntro from \"./components/AppIntroduction/AppIntroduction\";\nimport ReadContainer from \"./container/ReadContainer/ReadContainer\";\n\nfunction App() {\n  console.log(\"hi\");\n  return (\n    <div className=\"App\">\n      <AppHeader />\n\n      <Row className=\"app-body\">\n        <Col flex={2}>1 / 6</Col>\n        <Col flex=\"5 500px\">\n          <AppIntro />\n          <ReadContainer />\n        </Col>\n        <Col flex={2}>1 / 6</Col>\n      </Row>\n\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n",["43","44"],"/Users/sumukhahegde/Code/React/speed-read/src/components/AppHeader/AppHeader.tsx",[],"/Users/sumukhahegde/Code/React/speed-read/src/components/Footer/Footer.tsx",[],"/Users/sumukhahegde/Code/React/speed-read/src/index.tsx",[],"/Users/sumukhahegde/Code/React/speed-read/src/reportWebVitals.ts",[],"/Users/sumukhahegde/Code/React/speed-read/src/components/AppIntroduction/AppIntroduction.tsx",[],"/Users/sumukhahegde/Code/React/speed-read/src/container/ReadContainer/ReadContainer.tsx",["45"],"/Users/sumukhahegde/Code/React/speed-read/src/components/TextBox/TextBox.tsx",[],"/Users/sumukhahegde/Code/React/speed-read/src/components/TextFormat/TextFormat.tsx",["46"],"import React from \"react\";\nimport { Select, Tooltip, Button, InputNumber } from \"antd\";\nimport { FullscreenOutlined, BoldOutlined } from \"@ant-design/icons\";\n\nimport \"./TextFormat.scss\";\nconst { Option } = Select;\n\ninterface TextFormatProps {\n  setFontFamily: (font: string) => void;\n  setFontSize: (size: number) => void;\n  setTopic: (topic: string) => void;\n  setIsBold: () => void;\n  setIsFullScreen: () => void;\n  defaultTopic: string;\n  defaultSize: number;\n  defaultFontFamily: string;\n}\n\nconst TextFormat: React.FC<TextFormatProps> = (props) => {\n  return (\n    <div className=\"text-format-form\">\n      <div>\n        <Select\n          defaultValue={props.defaultFontFamily}\n          className=\"font-select-dropdown\"\n          onChange={(value) => props.setFontFamily(value)}\n        >\n          <Option value=\"Arial\">Arial</Option>\n          <Option value=\"Geneva\">Geneva</Option>\n          <Option value=\"Times New Roman\">Times New Roman</Option>\n          <Option value=\"Verdana\">Verdana</Option>\n        </Select>\n        <InputNumber\n          min={10}\n          max={30}\n          defaultValue={props.defaultSize}\n          className=\"font-size\"\n          onChange={(value) => {\n            props.setFontSize(value as number);\n          }}\n        />\n        <Select\n          defaultValue={props.defaultTopic}\n          className=\"topic-select-dropdown\"\n          onChange={(val) => props.setTopic(val)}\n        >\n          <Option value=\"Random\">Random</Option>\n          <Option value=\"Articles\">Articles</Option>\n          <Option value=\"News\">News</Option>\n          <Option value=\"Technology\">Technology</Option>\n          <Option value=\"Sports\">Sports</Option>\n          <Option value=\"Bible\">Bible</Option>\n          <Option value=\"Quran\">Quran</Option>\n          <Option value=\"Geetha\">Bhagavath Geetha</Option>\n        </Select>\n      </div>\n      <div>\n        <Tooltip title=\"Bold\">\n          <Button\n            // style={{ fontWeight: \"bold\" }}\n            icon={<BoldOutlined onClick={props.setIsBold} />}\n          />\n        </Tooltip>\n      </div>\n    </div>\n  );\n};\n\nexport default TextFormat;\n",{"ruleId":"47","severity":1,"message":"48","line":2,"column":10,"nodeType":"49","messageId":"50","endLine":2,"endColumn":16},{"ruleId":"47","severity":1,"message":"51","line":5,"column":20,"nodeType":"49","messageId":"50","endLine":5,"endColumn":27},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"47","severity":1,"message":"56","line":1,"column":35,"nodeType":"49","messageId":"50","endLine":1,"endColumn":44},{"ruleId":"47","severity":1,"message":"57","line":3,"column":10,"nodeType":"49","messageId":"50","endLine":3,"endColumn":28},"@typescript-eslint/no-unused-vars","'Layout' is defined but never used.","Identifier","unusedVar","'Divider' is defined but never used.","no-native-reassign",["58"],"no-negated-in-lhs",["59"],"'useEffect' is defined but never used.","'FullscreenOutlined' is defined but never used.","no-global-assign","no-unsafe-negation"]